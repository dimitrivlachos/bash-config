# Colours
VEN_COLOR="\[\033[0;32m\]"
DIR_COLOR="\[\033[1;34m\]"
USER_COLOR="\[\033[1;33m\]"
HOST_COLOR="\[\033[1;33m\]"
RESET_COLOR="\[\033[0m\]"

# Emoji support
[[ "$TERM_PROGRAM" == "vscode" ]] && export SHOW_EMOJIS=1

# Git branch
parse_git_branch() {
    [[ "$SHOW_GIT_BRANCH" -eq 1 ]] || return
    local branch
    branch="$(git symbolic-ref --short HEAD 2>/dev/null)"
    [[ -n "$branch" ]] && echo -n "${SHOW_EMOJIS:+ 🌿}(${branch})"
}

# Virtualenv
parse_virtualenv() {
    local env_name=""
    if [[ -n "$CONDA_DEFAULT_ENV" ]]; then
        env_name="$(basename "$CONDA_DEFAULT_ENV")"
    fi

    if [[ "$SHOW_VENV" -eq 1 && -n "$env_name" ]]; then
        echo -e "(${VEN_COLOR}${env_name}${RESET_COLOR}${SHOW_EMOJIS:+ 🐍})"
    fi
}

# Hostname mapping
# This function can be overridden by specialisations to provide custom hostname mappings.
# Specialisations should define HOSTNAME_MAP associative array if they want custom mappings.
map_hostname() {
  local host="$1"
  # Check if HOSTNAME_MAP is defined (from specialization)
  if declare -p HOSTNAME_MAP &>/dev/null 2>&1; then
    echo "${HOSTNAME_MAP[$host]:-$host}"
  else
    echo "$host"
  fi
}

# Prompt
set_prompt() {
    local prompt_style="${1:-$BASH_PROMPT_STYLE}"
    
    # Check if we're using Pi-style prompt
    if [[ "$prompt_style" == "pi" ]]; then
        # Use Raspberry Pi OS default color scheme: green user@host, blue path and $
        case "$TERM" in
            xterm-color|*-256color) color_prompt=yes;;
        esac
        
        if [[ "$color_prompt" == "yes" ]] || [[ -x /usr/bin/tput ]] && tput setaf 1 >&/dev/null; then
            # Pi's signature green user@host, blue path and $ with space
            PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] '
        else
            PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
        fi
        
        # Set xterm title like Pi default
        case "$TERM" in
        xterm*|rxvt*)
            PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
            ;;
        esac
        return
    fi
    
    # Default custom prompt style
    local venv branch dir
    venv="$(parse_virtualenv)"
    branch="$(parse_git_branch)"
    dir="\W"
    [[ "$DIR_LENGTH" == "long" ]] && dir="\w"
    PS1="${venv}[${USER_COLOR}\u${RESET_COLOR}@${HOST_COLOR}$(map_hostname "${HOSTNAME:-$(uname -n)}")${RESET_COLOR}:${DIR_COLOR}${dir}${RESET_COLOR}${branch}]\$ "
}

# Toggles
tgit() { export SHOW_GIT_BRANCH=$((1 - SHOW_GIT_BRANCH)); set_prompt; }
tvenv() { export SHOW_VENV=$((1 - SHOW_VENV)); set_prompt; }
tdir() { DIR_LENGTH=$([[ "$DIR_LENGTH" == "short" ]] && echo "long" || echo "short"); set_prompt; }
tem() { export SHOW_EMOJIS=$((1 - SHOW_EMOJIS)); set_prompt; }

# Help
function ph() {
    echo "Prompt customization commands:"
    echo "  tgit      - Toggle the display of the current git branch in the prompt."
    echo "  tvenv     - Toggle the display of the current virtual environment in the prompt."
    echo "  tdir      - Toggle the display of the directory between short (\W) and long (\w) formats."
    echo "  tem       - Toggle the display of emojis in the prompt."
    echo "  ph        - Show this help message."
    echo "  rp        - Reset the prompt."
}
